# Define parameters
num_customers = 32
num_vehicles = 4
capacity = 100
num_epochs = 1000
learning_rate = 0.1
discount_factor = 0.9
epsilon = 0.1

# Define customer data
customer_data = {
    1: (42, 68, 0), 2: (77, 97, 5), 3: (28, 64, 23), 4: (77, 39, 14),
    5: (32, 33, 13), 6: (32, 8, 8), 7: (42, 92, 18), 8: (8, 3, 19),
    9: (7, 14, 10), 10: (82, 17, 18), 11: (48, 13, 20), 12: (53, 82, 5),
    13: (39, 27, 9), 14: (7, 24, 23), 15: (67, 98, 9), 16: (54, 52, 18),
    17: (72, 43, 10), 18: (73, 3, 24), 19: (59, 77, 13), 20: (58, 97, 14),
    21: (23, 43, 8), 22: (68, 98, 10), 23: (47, 62, 19), 24: (52, 72, 14),
    25: (32, 88, 13), 26: (39, 7, 14), 27: (17, 8, 2), 28: (38, 7, 23),
    29: (58, 74, 15), 30: (82, 67, 8), 31: (42, 7, 20), 32: (68, 82, 24),
}

##########################################################################


# Problem parameters
num_customers = 32
capacity = 100
num_ants = 10
num_iterations = 100
pheromone_evaporation_rate = 0.25
pheromone_deposit_rate = 1
alpha = 1
beta = 2
Q = 100

# Distance matrix (example, replace with actual distances)
distance_matrix = np.random.randint(1, 100, size=(num_customers + 1, num_customers + 1))
np.fill_diagonal(distance_matrix, 0)

# Demand dictionary
demand = {
    0: 0, 1: 5, 2: 23, 3: 14, 4: 13, 5: 8, 6: 18, 7: 19, 8: 10, 9: 18,
    10: 20, 11: 5, 12: 9, 13: 23, 14: 9, 15: 18, 16: 10, 17: 24, 18: 13,
    19: 14, 20: 8, 21: 10, 22: 19, 23: 14, 24: 13, 25: 14, 26: 2, 27: 23,
    28: 15, 29: 8, 30: 20, 31: 24, 32: 3
}

# Routes
routes = [
[0, 7, 8, 13, 26, 0, 2, 15, 22, 0, 4, 12, 0, 1, 14, 19, 21, 0, 9, 17, 0, 5, 10, 25, 27, 30, 0, 20, 32, 0, 3, 16, 0], 
[0, 7, 8, 13, 26, 0, 11, 18, 23, 28, 29, 31, 0, 15, 0, 4, 12, 0, 1, 14, 19, 21, 0, 9, 17, 0, 5, 10, 25, 27, 30, 0, 20, 32, 0, 3, 16, 0, 0, 2, 22, 0, 6, 24, 0],
 [0, 7, 26, 0, 11, 18, 23, 28, 31, 0, 15, 0, 4, 12, 0, 1, 14, 19, 21,0, 9, 17, 0, 10, 0, 32, 0, 3, 16, 0,2, 22, 0, 6, 24, 0, 29, 0, 8, 13, 0, 20, 0, 5, 25, 27, 30, 0],
 [0, 7, 8, 13, 26, 0, 11, 18, 23, 28, 29, 31, 0, 15, 0, 4, 12, 0, 1, 14, 19, 21, 0, 9, 17, 0, 5, 10, 25, 27, 30, 0, 20, 32, 0, 3, 16, 0, 2, 22, 0, 6, 24, 0], 
[0, 7, 26, 0, 11, 18, 23, 28, 31, 0, 15, 0, 4, 12, 0, 1, 14, 19, 21, 0, 9, 17, 0, 10, 0, 32, 0, 3, 16, 0, 2, 22, 0, 6, 24, 0, 29, 0, 8, 13, 0, 20, 0, 5, 25, 27, 30, 0], 
[0, 7, 26, 0, 11, 18, 23, 28, 31, 0, 15, 0, 4, 12, 0, 1, 14, 19, 21, 0, 9, 17, 0, 5, 10, 25, 27, 30, 0, 20, 32, 0, 3, 16,0, 2, 22, 0, 6, 24, 0, 29, 0, 8, 13, 0], 
[0, 7, 26, 0, 11, 18, 23, 28, 31, 0, 15, 0, 4, 12, 0, 1, 14, 19, 21, 0, 9, 17, 0, 10, 0, 32, 0, 3, 16, 0, 2, 22, 0, 6, 24, 0, 29, 0, 8, 13, 0, 20, 0, 5, 25, 27, 30, 0],
[0, 7, 0 ,11, 18, 23, 28, 31, 0, 15, 0, 4, 12, 0, 1, 14, 19, 21, 0, 9, 17, 0, 10, 0, 32, 0, 3, 16, 0, 2, 22, 0, 6, 24, 0, 29, 0, 13, 0, 20, 0, 5, 25, 27, 30, 0, 8, 26, 0],
[0, 7, 26, 0, 11, 18, 23, 28, 31, 0, 15, 0, 4, 12, 0, 1, 14, 19, 21, 0, 9, 17, 0, 10, 0, 32, 0, 3, 16, 0, 2, 22, 0, 6, 24, 0, 29, 0, 8, 13, 0, 20, 0, 5, 25, 27, 30, 0],
 [0, 7, 26, 0, 11, 18, 23, 28, 31, 0, 15, 0, 4, 12, 0, 1, 14, 19, 21, 0, 9, 17, 0, 5, 10, 25, 27, 30, 0, 20, 32, 0, 3, 16, 0, 2, 22, 0, 6, 24, 0, 29, 0, 8, 13, 0]
]
